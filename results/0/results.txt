experiment id: 0, method: conda, base_learner: Decision Tree task: 7, fold: 0, accuracy: 0.8695652173913043, train_accuracy: 0.7238095238095238, ensemble_size: 3, duration: 61.81934332847595, other_results = [('size: 3', 'test accuracy:0.8695652173913043', 'train accuracy: 0.6761904761904762'), ('size: 5', 'test accuracy:0.8695652173913043', 'train accuracy: 0.7428571428571429'), ('size: 4', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7238095238095238'), ('size: 12', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7523809523809524'), ('size: 3', 'test accuracy:0.9130434782608695', 'train accuracy: 0.6666666666666667'), ('size: 10', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7428571428571429'), ('size: 10', 'test accuracy:0.8695652173913043', 'train accuracy: 0.7428571428571429'), ('size: 10', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7428571428571429'), ('size: 10', 'test accuracy:0.8695652173913043', 'train accuracy: 0.7428571428571429'), ('size: 10', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7428571428571429'), ('size: 5', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7333333333333333'), ('size: 4', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7142857142857142'), ('size: 4', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7142857142857142'), ('size: 4', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7142857142857142'), ('size: 3', 'test accuracy:0.8695652173913043', 'train accuracy: 0.6571428571428571'), ('size: 11', 'test accuracy:0.8695652173913043', 'train accuracy: 0.7428571428571429'), ('size: 4', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7047619047619047'), ('size: 6', 'test accuracy:0.8260869565217391', 'train accuracy: 0.7333333333333333'), ('size: 5', 'test accuracy:0.9130434782608695', 'train accuracy: 0.7238095238095238'), ('size: 5', 'test accuracy:0.9565217391304348', 'train accuracy: 0.7238095238095238'), 'top nd individuals per generation: [0.6349206349206349, 0.6507936507936507]', 'top ens individuals per generation: [(0.5904761904761904, 3.0), (0.6571428571428571, 3.0)]']
