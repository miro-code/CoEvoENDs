experiment id: 7, method: conda, base_learner: Decision Tree task: 3022, fold: 0, accuracy: 0.8282828282828283, train_accuracy: 0.8955555555555555, ensemble_size: 2, duration: 101.47680950164795, other_results = [('size: 2', 'test accuracy:0.8686868686868687', 'train accuracy: 0.7733333333333332'), ('size: 3', 'test accuracy:0.8888888888888888', 'train accuracy: 0.8666666666666666'), ('size: 24', 'test accuracy:0.9191919191919192', 'train accuracy: 0.9466666666666667'), ('size: 22', 'test accuracy:0.9090909090909091', 'train accuracy: 0.9400000000000001'), ('size: 7', 'test accuracy:0.8888888888888888', 'train accuracy: 0.9355555555555556'), ('size: 6', 'test accuracy:0.8585858585858586', 'train accuracy: 0.9133333333333333'), ('size: 21', 'test accuracy:0.8888888888888888', 'train accuracy: 0.9377777777777778'), ('size: 3', 'test accuracy:0.8484848484848485', 'train accuracy: 0.8422222222222221'), ('size: 24', 'test accuracy:0.9191919191919192', 'train accuracy: 0.9422222222222223'), ('size: 22', 'test accuracy:0.898989898989899', 'train accuracy: 0.9399999999999998'), ('size: 11', 'test accuracy:0.9191919191919192', 'train accuracy: 0.9311111111111112'), ('size: 11', 'test accuracy:0.898989898989899', 'train accuracy: 0.9311111111111112'), ('size: 7', 'test accuracy:0.898989898989899', 'train accuracy: 0.9266666666666665'), ('size: 8', 'test accuracy:0.8787878787878788', 'train accuracy: 0.9288888888888888'), ('size: 6', 'test accuracy:0.8484848484848485', 'train accuracy: 0.9066666666666666'), ('size: 6', 'test accuracy:0.8282828282828283', 'train accuracy: 0.9066666666666666'), ('size: 6', 'test accuracy:0.9090909090909091', 'train accuracy: 0.9066666666666666'), ('size: 21', 'test accuracy:0.8888888888888888', 'train accuracy: 0.9377777777777776'), ('size: 25', 'test accuracy:0.9191919191919192', 'train accuracy: 0.9377777777777778'), ('size: 6', 'test accuracy:0.8888888888888888', 'train accuracy: 0.8955555555555555'), 'top nd individuals per generation: [0.7814814814814816, 0.7962962962962963]', 'top ens individuals per generation: [(0.7733333333333332, 2.0), (0.7733333333333332, 2.0)]']
